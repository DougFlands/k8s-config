apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "40"
    description: redis
  creationTimestamp: "2019-12-27T03:14:53Z"
  generation: 41
  labels:
    k8s-app: redis
    qcloud-app: redis
  name: redis
  namespace: default
  resourceVersion: "8830407772"
  selfLink: /apis/apps/v1beta2/namespaces/default/deployments/redis
  uid: 0d24fc79-2857-11ea-8203-068f3b461d43
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: redis
      qcloud-app: redis
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: redis
        qcloud-app: redis
    spec:
      containers:
      - args:
        - /etc/redis/redis.conf
        command:
        - redis-server
        image: redis:latest
        imagePullPolicy: IfNotPresent
        name: redis
        resources:
          limits:
            cpu: 300m
            memory: 512Mi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          privileged: true
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/redis
          name: conf
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: qcloudregistrykey
      - name: tencenthubkey
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /data/redis/data
          type: DirectoryOrCreate
        name: data
      - hostPath:
          path: /data/redis/conf
          type: DirectoryOrCreate
        name: conf
