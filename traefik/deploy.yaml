apiVersion: apps/v1
kind: Deployment
metadata:
  name: traefik-ingress-controller
  labels:
    app: traefik
spec:
  selector:
    matchLabels:
      app: traefik
  template:
    metadata:
      name: traefik
      labels:
        app: traefik
    spec:
      serviceAccountName: traefik-ingress-controller
      terminationGracePeriodSeconds: 1
      hostNetwork: true
      containers:
        - image: traefik:v2.1.6
          name: traefik-ingress-lb
          ports:
            - name: http
              containerPort: 80
              hostPort: 80           #hostPort方式，将端口暴露到集群节点
            - name: https
              containerPort: 443
              hostPort: 443          #hostPort方式，将端口暴露到集群节点
            - name: admin
              containerPort: 8080
          resources:
            limits:
              cpu: 2000m
              memory: 1024Mi
            requests:
              cpu: 1000m
              memory: 1024Mi
          securityContext:
            capabilities:
              drop:
                - ALL
              add:
                - NET_BIND_SERVICE
          args:
            - --configfile=/config/traefik.yaml
            - --web=true
            - --kubernetes=true
            - --logLevel=DEBUG
          volumeMounts:
            - mountPath: "/config"
              name: "config"
      volumes:
        - name: config
          configMap:
            name: traefik-config 
      tolerations:                #设置容忍所有污点，防止节点被设置污点
        - operator: "Exists"
---
apiVersion: v1
kind: Service
metadata:
  name: traefik
spec:
  ports:
    - name: web
      protocol: TCP
      # nodePort: 30080
      port: 80
      targetPort: 80
    - name: websecure
      protocol: TCP
      # nodePort: 30443
      port: 443
      targetPort: 443
    - name: admin
      port: 8080
      targetPort: 8080
      # nodePort: 30880
  selector:
    app: traefik
  type: LoadBalancer
  # type: NodePort