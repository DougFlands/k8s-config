apiVersion: apps/v1beta2
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "25"
    description: kafka
  creationTimestamp: "2020-01-28T07:40:17Z"
  generation: 29
  labels:
    k8s-app: kafka
    qcloud-app: kafka
  name: kafka
  namespace: default
  resourceVersion: "8971389069"
  selfLink: /apis/apps/v1beta2/namespaces/default/deployments/kafka
  uid: 6d9d1174-41a1-11ea-8203-068f3b461d43
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      k8s-app: kafka
      qcloud-app: kafka
  strategy:
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        k8s-app: kafka
        qcloud-app: kafka
        qcloud-redeploy-timestamp: "1585126195078"
    spec:
      containers:
      - env:
        - name: PATH
          value: /usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/lib/jvm/java-1.8-openjdk/jre/bin:/usr/lib/jvm/java-1.8-openjdk/bin:/opt/kafka/bin
        - name: LANG
          value: C.UTF-8
        - name: JAVA_HOME
          value: /usr/lib/jvm/java-1.8-openjdk/jre
        - name: JAVA_VERSION
          value: 8u212
        - name: JAVA_ALPINE_VERSION
          value: 8.212.04-r0
        - name: KAFKA_VERSION
          value: 2.4.0
        - name: SCALA_VERSION
          value: "2.12"
        - name: KAFKA_HOME
          value: /opt/kafka
        - name: GLIBC_VERSION
          value: 2.30-r0
        - name: KAFKA_ADVERTISED_HOST_NAME
          value: 172.16.255.x
        - name: KAFKA_ZOOKEEPER_CONNECT
          value: 172.16.255.x:2181
        - name: KAFKA_PORT
          value: "9092"
        - name: KAFKA_ADVERTISED_LISTENERS
          value: PLAINTEXT://119.29.141.39:30902
        image: ccr.ccs.tencentyun.com/flands/wurstmeister-kafka-docker:master
        imagePullPolicy: Always
        name: kafka
        resources:
          limits:
            cpu: 300m
            memory: 1Gi
          requests:
            cpu: 100m
            memory: 256Mi
        securityContext:
          privileged: false
          procMount: Default
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /data
          name: data
        - mountPath: /etc/kafka/secrets
          name: secrets
      dnsPolicy: ClusterFirst
      imagePullSecrets:
      - name: qcloudregistrykey
      - name: tencenthubkey
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /data/kafka
          type: DirectoryOrCreate
        name: data
      - hostPath:
          path: /data/kafka/secrets
          type: DirectoryOrCreate
        name: secrets